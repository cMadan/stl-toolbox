{"name":"STL Toolbox","tagline":"Visualizing and quantifying movement from pre-recorded videos","body":"# Spectral time-lapse (STL) Toolbox\r\n\r\n### Description\r\nThe spectral time-lapse (STL) algorithm is designed to be a simple and efficient technique for analyzing and presenting both spatial and temporal information of animal movements within a two-dimensional image representation. The STL algorithm re-codes an animal's position at every time point with a time-specific color, and overlaid it over a reference frame of the video, to produce a summary image. It additionally incorporates automated motion tracking, such that the animal's position can be extracted and summary statistics such as path length and duration can be calculated, as well as instantaneous velocity and acceleration. This toolbox implements the STL algorithm as a MATLAB toolbox and allows for a large degree of end-user control and flexibility.\r\n\r\n## More Information\r\nThe STL algorithm is described in detail here:\r\n\r\nMadan CR and Spetch ML. Visualizing and quantifying movement from pre-recorded videos: The spectral time-lapse (STL) algorithm. F1000Research 2014, 3:19 (doi: 10.12688/f1000research.3-19.v1)\r\nhttp://f1000research.com/articles/3-19/v1\r\n\r\nThe published version of the toolbox is also available on Zenodo:\r\n\r\nZENODO: Spectral time-lapse (STL) Toolbox. doi: 10.5281/zenodo.7663\r\nhttps://zenodo.org/record/7663\r\n\r\n### Illustration of the STL algorithm and examples of images at each stage\r\n![STL algorithm workflow](https://raw.githubusercontent.com/cMadan/stl-toolbox/master/stl_workflow.gif)\r\n\r\n### Example output\r\n\r\n```\r\n>> data = stltool('S-Video_20110718_1132.avi');\r\n \r\nProcessing video file \"S-Video_20110718_1132.avi\"\r\nReading from raw video (46 Frames)\r\n..............................................\r\nVideo is being sampled at one position per 1.00 seconds (1.0 pps)\r\nChecking frames for motion (46 Frames)\r\n..............................................\r\nColorizing frames (25 Frames)\r\n.........................\r\nCalculating spectral timelapse (STL) image\r\nSTL generated (\"STL_S-Video_20110718_1132.tif\")\r\nSTL summarizes 25.02 seconds of video\r\nProcessing video file \"S-Video_20110718_1132.avi\"\r\nReading from raw video (228 Frames)\r\n....................................................................................................................................................................................................................................\r\nVideo is being sampled at one position per 0.20 seconds (5.0 pps)\r\nChecking frames for motion (228 Frames)\r\n....................................................................................................................................................................................................................................\r\nDetecting path\r\nPath calculated (\"STLpath_S-Video_20110718_1132.tif\")\r\nTotal path length measured at 6.1424 m\r\nTotal path took 25.43 s\r\nVelocity-acceleration plot generated (\"STLvel_S-Video_20110718_1132.pdf\")\r\nans = \r\n               config: [1x1 struct]\r\n                fname: 'S-Video_20110718_1132.avi'\r\n       framesPathKept: 127\r\n    framesPathSampled: 228\r\n        framesSTLKept: 25\r\n     framesSTLSampled: 46\r\n           pathLength: 6.1424\r\n             pathTime: 25.4251\r\n              ppsPath: 4.9951\r\n               ppsSTL: 0.9990\r\n              trackXY: [127x2 double]\r\n               velAcc: [1x125 double]\r\n               velVel: [1x126 double]\r\n            vidCDepth: 1\r\n               vidFPS: 29.9704\r\n            vidHeight: 480\r\n             vidWidth: 640\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}